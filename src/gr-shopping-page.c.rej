diff a/src/gr-shopping-page.c b/src/gr-shopping-page.c	(rejected hunks)
@@ -209,49 +209,60 @@ ingredient_format_unit (Ingredient *ing)
 {
         g_autoptr(GString) s = NULL;
         int i;
-        static char *for_display;
         GrPreferredUnit user_volume_unit = get_volume_unit();
         GrPreferredUnit user_weight_unit = get_weight_unit();
-
-        s = g_string_new ("");
+        GrUnit u1, u2;
+        double a1, a2;
+        GrDimension dimension;
+        g_autofree char *a1_final = NULL;
+        g_autofree char *a2_final = NULL;
+        const char *u1_final = NULL;
+        const char *u2_final = NULL;
 
         for (i = 0; i < ing->units->len; i++) {
-                Unit *u = &g_array_index (ing->units, Unit, i);
-                g_autofree char *num = NULL;
-                if (s->len > 0)
-                        g_string_append (s, ", ");
-                double a1 = u->amount;
-                GrUnit u1 = u->unit;
-                double a2 = 0;
-                GrUnit u2 = GR_UNIT_UNKNOWN;
-               
-                GrDimension dimension = gr_unit_get_dimension(u1);
-                if (dimension) {
-                
-                if (dimension == GR_DIMENSION_VOLUME) {
-                        convert_volume(&a1, &u1, user_volume_unit); 
-                        }
-
-                if (dimension == GR_DIMENSION_MASS) {
-                        convert_weight(&a1, &u1, user_weight_unit);
-                        }
-               }
-                
-                if ((dimension == GR_DIMENSION_VOLUME && user_volume_unit == GR_PREFERRED_UNIT_IMPERIAL) || (dimension == GR_DIMENSION_MASS && user_weight_unit == GR_PREFERRED_UNIT_IMPERIAL)) {
-                        multiple_units(&a1, &u1, &a2, &u2);  
+                Unit *unit = &g_array_index (ing->units, Unit, i);
+                double a = unit->amount;
+                GrUnit u = unit->unit;
+
+                dimension = gr_unit_get_dimension (u);
+
+                if (!dimension) {
+                        g_error ("No dimension...how...");
+                }
+                else if (dimension == GR_DIMENSION_VOLUME) {
+                        convert_volume (&a, &u, user_volume_unit);
+                }
+                else if (dimension == GR_DIMENSION_MASS) {
+                        convert_weight (&a, &u, user_weight_unit);
+                }
+
+g_print ("%d: unit %s amount %g\n", i, gr_unit_get_name (u), a);
+                if (i == 0) {
+                        u1 = u;
+                        a1 = a;
+                }
+                else if (u == u1) {
+                        a1 += a;
                 }
                 else {
-                        human_readable(&a1, &u1);
+                        g_error ("conversion yielded different units...why...");
                 }
-                char *a_final = gr_number_format(a1);
-                const char *u_final = gr_unit_get_name(u1);
-                char *a2_final = gr_number_format(a2);
-                const char *u2_final = gr_unit_get_name(u2);
- 
-                for_display = format_for_display(a_final, u_final, a2_final, u2_final);
         }
 
-        return for_display;
+        dimension = gr_unit_get_dimension (u1);
+
+        a2 = 0;
+        u2 = GR_UNIT_UNKNOWN;
+
+        if ((dimension == GR_DIMENSION_VOLUME && user_volume_unit == GR_PREFERRED_UNIT_IMPERIAL) ||
+            (dimension == GR_DIMENSION_MASS && user_weight_unit == GR_PREFERRED_UNIT_IMPERIAL)) {
+                multiple_units (&a1, &u1, &a2, &u2);
+        }
+        else {
+                human_readable (&a1, &u1);
+        }
+
+        return format_for_display (a1, u1, a2, u2);
 }
 
 static void
